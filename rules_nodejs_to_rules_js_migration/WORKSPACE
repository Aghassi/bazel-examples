load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# TODO: remove this explicit fetch once aspect_rules_js has a transitive dep on bazel-lib-1.25.0 or greater
http_archive(
    name = "aspect_bazel_lib",
    sha256 = "d2a71e1e39961535db2f9164c7a588cff1a86938564634532062ed3a3cf307b3",
    strip_prefix = "bazel-lib-1.25.0",
    url = "https://github.com/aspect-build/bazel-lib/releases/download/v1.25.0/bazel-lib-v1.25.0.tar.gz",
)

################################################################################
# rules_js
################################################################################

http_archive(
    name = "aspect_rules_js",
    sha256 = "3ad6684d744ebbc6592d404cc3aa81d0da634eccb3499f6fd198ae122fa28489",
    strip_prefix = "rules_js-1.19.0",
    url = "https://github.com/aspect-build/rules_js/releases/download/v1.19.0/rules_js-v1.19.0.tar.gz",
)

http_archive(
    name = "aspect_rules_ts",
    sha256 = "db77d904284d21121ae63dbaaadfd8c75ff6d21ad229f92038b415c1ad5019cc",
    strip_prefix = "rules_ts-1.3.0",
    url = "https://github.com/aspect-build/rules_ts/releases/download/v1.3.0/rules_ts-v1.3.0.tar.gz",
)

load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")

rules_js_dependencies()

load("@aspect_rules_ts//ts:repositories.bzl", "rules_ts_dependencies")

rules_ts_dependencies(ts_version_from = "//:package.json")

load("@rules_nodejs//nodejs:repositories.bzl", "DEFAULT_NODE_VERSION", "nodejs_register_toolchains")

# NB: The rules_js nodejs toolchain should be named something other than "nodejs" so its name does
# not conflict with the build_bazel_rules_nodejs toolchain naming and prevent the two toolchains
# from existing side by side.
# TODO(rules_js_migration): rename to standard `nodejs` once rules_nodejs is completely removed
nodejs_register_toolchains(
    name = "nodejs_rules_js",
    node_version = DEFAULT_NODE_VERSION,
)

load("@aspect_rules_js//npm:npm_import.bzl", "npm_translate_lock")

# NB: The npm_translate_lock repository is named @npm_rules_js to not conflict with @npm from
# rules_nodejs.
# TODO(rules_js_migration): rename to standard `npm` once rules_nodejs is completely removed
npm_translate_lock(
    name = "npm_rules_js",
    npmrc = "//:.npmrc",
    pnpm_lock = "//bazel:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)

load("@npm_rules_js//:repositories.bzl", "npm_repositories")

npm_repositories()

################################################################################
# rules_nodejs
################################################################################

http_archive(
    name = "build_bazel_rules_nodejs",
    sha256 = "c911b5bd8aee8b0498cc387cacdb5f917098ce477fb4182db07b0ef8a9e045c0",
    urls = ["https://github.com/bazelbuild/rules_nodejs/releases/download/4.7.1/rules_nodejs-4.7.1.tar.gz"],
)

load("@build_bazel_rules_nodejs//:index.bzl", "yarn_install")

yarn_install(
    name = "npm",
    package_json = "//:package.json",
    # symlink_node_modules must be explicitly disabled in rules_nodejs 4.7.1
    symlink_node_modules = False,
    yarn_lock = "//:yarn.lock",
)
